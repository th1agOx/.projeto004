* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;  /* prefixo para suavisação de fonte */
    -moz-osx-font-smoothing: grayscale;    
}

:root {
    font-size: 62.5%; 
    --color-base-white: #FFFFFF;
    --color-base-gray-100: #f5f5f5 ;
    --color-base-gray-300: #8d8d99 ;
    --color-base-gray-900: #202024 ;
    --color-base-font : #3D3D3D ;
    --color-base-font-footer: #323238;
}

html,
body,
input {
    font-family: "Mulish", sans-serif;
}

body {
    font-size: 1.6rem;

    background-color: var(--color-base-white);
    color: var(--color-base-gray-900);
}

#app {
    display: grid ;
    grid-template-rows: max-content 1fr max-content ;   
    
    height: 100vh ;
}

.container{
    padding: 1.6rem 3.2rem;
    width: min(112rem, 100%);
    margin: 0 auto;
}

main{
    overflow-y: scroll;
    scrollbar-gutter: stable both-edges;

    background-color: var(--color-base-gray-100);
}

header,
nav,
ul  {
    display:flex;
    align-items: center;
    gap: 7.2rem;

    font-weight: 700;
}

header form {
    flex: 1;  
}

.input-wrapper label { 
    width: 1px;
    height: 1px;
    overflow: hidden;
    position: absolute;
}

.input-wrapper input{
    width: 100%;
    height: 4.8rem;

    padding: 1.6rem;

    background-color: var(--color-base-gray-100);

    border: none;
    border-radius: .6rem;

    font-size: 1.6rem;
    font-weight: 600;
}

.input-wrapper input::placeholder {   /* cor de fonte em 3d */ 
    color: var(--color-base-font);
    opacity: 0.56;
}

nav ul {
    list-style: none;
    color: var(--color-base-gray-300);
}

nav ul li:hover {
    color: var(--color-base-gray-900);
    cursor: pointer;
}

.avatar{
    width: 4.2rem;
    height: 4.2rem;

    object-fit: cover;  /* quadrado perfeito */

    border-radius: 50%;
}

footer p {
    text-align: center;
    padding: 2.9rem 1.6rem;

    font-weight: 600;

    color: var(--color-base-font-footer);
}

/* gallery */

main h1 {
    padding-top: 1.6rem;

    font-size: 2.4rem;
    font-weight: 700;
    color: var(--color-base-gray-900);
}

.item {
    background-color: var(--color-base-white);
    border-radius: .8rem;
    overflow: hidden;
}

.details {
    padding: 2.2rem 2.2rem 1.2rem;

    font-size: 1.8rem;
}

.tag {
    padding: 0 2.2rem 2.2rem;
}

.tag span {
    padding: .8rem;
    
    font-size: 1.1rem;
    line-height: 0;

    background-color: var(--color-base-gray-100);
    border-radius: .6rem;
}

.gallery {
    margin-top: 3.6rem;

    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2.2rem;
}

.item img {
    width: 100%;
    aspect-ratio: 16/9;
    object-fit: cover;
}






/*  
    max-content: é responsável por expandir o conteudo ao máximo, conforme os elementos vão sendo
    adcionados dentro das caixas. 

    width: min(112rem, 100%) -> nos diz que o conteudo se transforma em 100% ao estar com 1120px, 
    depois disso ele fica fixo 

    overflow-y -> faz com que o scrool do mouse fique na direção eixo y, e somente no conteudo
    desejado, não para a página inteira;
    scrollbar-gutter: stable both-edges -> dessa forma o scrool não ocupará um espaço ná viewport.

    para a váriavel, não chama-se a informação, mas a caixa var no elemento que eu for aplicar ela.

    o elemento com flex: 1 ocupará todo o conteudo.

    Proporção de imagem, 16x9 -> aspect ratio, para que a imagem não fique esticada -> object-fit cover 

    overflow = transbordar hidden = esconde o conteudo que está transbordando